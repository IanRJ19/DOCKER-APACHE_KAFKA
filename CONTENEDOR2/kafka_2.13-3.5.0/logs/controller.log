[2023-08-10 20:03:52,391] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-08-10 20:03:52,392] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-08-10 20:03:52,392] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-08-10 20:03:52,392] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-08-10 20:03:52,392] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-30 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-36 -> List(2), __consumer_offsets-24 -> List(2), topic_name-0 -> List(2, 1), __consumer_offsets-38 -> List(2), __consumer_offsets-48 -> List(2), btc_prices-0 -> List(2), __consumer_offsets-26 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-8 -> List(2), __consumer_offsets-4 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-42 -> List(2), __consumer_offsets-18 -> List(2), __consumer_offsets-2 -> List(2), __consumer_offsets-6 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-0 -> List(2), __consumer_offsets-44 -> List(2), eth_prices-0 -> List(2), __consumer_offsets-12 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2023-08-10 20:03:52,392] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-08-10 20:03:52,392] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-08-10 20:05:11,568] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2023-08-10 20:05:11,568] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2023-08-10 20:05:11,569] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2023-08-10 20:05:11,577] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-08-10 20:05:11,582] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-46 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),btc_prices-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-9 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-21 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),eth_prices-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-30 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-26 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-38 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-34 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),topic_name-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6),__consumer_offsets-16 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-45 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-24 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-20 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-8 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-33 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-44 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-32 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-28 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-3 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-14 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-10 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-22 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-18 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),topic_na-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-2 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:6) (kafka.controller.KafkaController)
[2023-08-10 20:05:11,597] WARN [RequestSendThread controllerId=1] Controller 1 epoch 6 fails to send request (type=StopReplicaRequest, controllerId=1, controllerEpoch=6, brokerEpoch=4294967646, deletePartitions=false, topicStates=StopReplicaTopicState(topicName='topic_name', partitionStates=[StopReplicaPartitionState(partitionIndex=0, leaderEpoch=3, deletePartition=false)])) to broker localhost:9092 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:256)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-10 20:05:11,700] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:249)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-10 20:05:11,725] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-08-10 20:05:11,726] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-08-10 20:05:11,726] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-08-10 20:05:11,726] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2023-08-10 20:05:11,727] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-08-10 20:05:11,728] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-08-10 20:05:11,729] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-08-10 20:05:11,730] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-08-10 20:05:11,730] WARN [RequestSendThread controllerId=1] Controller 1 epoch 6 fails to send request (type=StopReplicaRequest, controllerId=1, controllerEpoch=6, brokerEpoch=4294967646, deletePartitions=false, topicStates=StopReplicaTopicState(topicName='topic_name', partitionStates=[StopReplicaPartitionState(partitionIndex=0, leaderEpoch=3, deletePartition=false)])) to broker localhost:9092 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(Unknown Source)
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(Unknown Source)
	at java.base/java.util.concurrent.CountDownLatch.await(Unknown Source)
	at org.apache.kafka.server.util.ShutdownableThread.pause(ShutdownableThread.java:113)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:237)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-10 20:05:11,731] TRACE [RequestSendThread controllerId=1] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2023-08-10 20:05:11,731] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-08-10 20:05:11,731] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-08-10 20:05:11,733] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
