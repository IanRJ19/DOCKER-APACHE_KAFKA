[2023-07-18 10:06:12,930] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-18 10:06:12,930] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-18 10:06:12,930] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-18 10:06:12,931] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2023-07-18 10:06:12,931] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2023-07-18 10:06:12,932] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-07-18 10:06:12,932] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-07-18 10:06:12,933] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2023-07-18 10:06:47,206] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-18 10:06:47,215] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-07-18 10:46:40,306] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2023-07-18 10:46:40,308] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-07-18 10:46:40,310] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-18 10:46:40,312] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-18 10:46:40,313] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-07-18 10:46:40,320] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 4294967359) (kafka.controller.KafkaController)
[2023-07-18 10:46:40,323] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-18 10:46:40,326] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-07-18 10:46:40,332] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-18 10:46:40,333] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-07-18 10:46:40,333] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-18 10:46:40,333] INFO [Controller id=1] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-18 10:46:40,334] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-18 10:46:40,335] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-07-18 10:46:40,335] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-07-18 10:46:40,335] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-18 10:46:40,336] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-07-18 10:46:40,336] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-18 10:46:40,344] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-18 10:46:40,344] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-18 10:46:40,347] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-18 10:46:40,347] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-07-18 10:46:40,347] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-18 10:46:40,348] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-18 10:46:40,350] INFO [RequestSendThread controllerId=1] Controller 1 connected to linux01:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-18 10:46:40,351] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-07-18 10:46:40,351] INFO [Controller id=1] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2023-07-18 10:46:40,354] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-18 10:46:40,354] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-18 10:46:40,354] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-18 10:46:40,355] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-18 10:46:40,355] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-18 10:46:40,367] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-18 10:46:40,928] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2023-07-18 10:46:40,929] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2023-07-18 10:46:40,929] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2023-07-18 10:46:40,934] TRACE [Controller id=1] All leaders =  (kafka.controller.KafkaController)
[2023-07-18 10:46:40,986] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-18 10:46:40,986] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-18 10:46:40,986] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-18 10:46:40,986] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2023-07-18 10:46:40,987] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-18 10:46:40,987] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-07-18 10:46:40,988] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-07-18 10:46:40,988] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-07-18 10:46:40,989] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-07-18 10:46:40,989] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-07-18 10:46:40,990] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2023-07-18 10:52:34,822] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-07-18 10:52:34,859] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2023-07-18 10:52:34,860] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-07-18 10:52:34,863] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-07-18 10:52:34,865] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-07-18 10:52:34,867] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-07-18 10:52:34,876] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 4294967379) (kafka.controller.KafkaController)
[2023-07-18 10:52:34,880] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-07-18 10:52:34,883] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-07-18 10:52:34,894] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-18 10:52:34,895] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-07-18 10:52:34,895] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-18 10:52:34,895] INFO [Controller id=1] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-07-18 10:52:34,896] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-07-18 10:52:34,898] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-07-18 10:52:34,898] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-07-18 10:52:34,898] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-07-18 10:52:34,898] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-07-18 10:52:34,899] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-07-18 10:52:34,906] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-07-18 10:52:34,907] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-18 10:52:34,909] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-07-18 10:52:34,909] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-07-18 10:52:34,909] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-07-18 10:52:34,910] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-07-18 10:52:34,912] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-07-18 10:52:34,912] INFO [Controller id=1] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2023-07-18 10:52:34,914] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker 10.0.27.37:9092 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.27.37:9092 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:249)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-07-18 10:52:34,916] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-07-18 10:52:34,917] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-07-18 10:52:34,917] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-07-18 10:52:34,917] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-07-18 10:52:34,918] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-07-18 10:52:34,934] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-07-18 10:52:35,028] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.27.37:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-18 10:52:39,935] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-18 10:52:39,935] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-18 10:52:48,048] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-07-18 10:52:48,048] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-07-18 10:52:48,051] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-07-18 10:52:48,052] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-07-18 10:52:48,054] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-07-18 10:52:48,055] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker 10.0.27.41:9092 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.27.41:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:249)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-07-18 10:52:48,056] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 4294967379, 2 -> 4294967397) (kafka.controller.KafkaController)
[2023-07-18 10:52:48,157] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker 10.0.27.41:9092 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.0.27.41:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:296)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:249)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-07-18 10:52:48,259] INFO [RequestSendThread controllerId=1] Controller 1 connected to 10.0.27.41:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-07-18 10:54:02,648] INFO [Controller id=1] New topics: [Set(topic_name)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic_name,Some(FSarU0seTcSAGnMe1AoHgw),Map(topic_name-0 -> ReplicaAssignment(replicas=2,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-18 10:54:02,648] INFO [Controller id=1] New partition creation callback for topic_name-0 (kafka.controller.KafkaController)
[2023-07-18 10:54:18,097] DEBUG [Controller id=1] Read current producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=0, size=1000), Zk path version 1 (kafka.controller.KafkaController)
[2023-07-18 10:54:18,119] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=1000, size=1000) by writing to Zk with path version 2 (kafka.controller.KafkaController)
[2023-07-18 10:55:12,346] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(FplHN1mjSZ6Z-dvS0ZfdKw),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-07-18 10:55:12,346] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-07-18 10:57:39,937] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-07-18 10:57:39,937] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-07-18 10:57:39,940] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-07-18 10:57:39,940] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-07-18 10:57:39,940] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-07-18 10:57:39,941] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
