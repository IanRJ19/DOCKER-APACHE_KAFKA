[2023-08-01 16:29:36,744] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-08-01 16:29:36,802] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 26 become-follower partitions (state.change.logger)
[2023-08-01 16:29:36,805] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 26 partitions (state.change.logger)
[2023-08-01 16:29:36,935] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,936] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,937] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,937] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,937] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,938] INFO [Controller id=1 epoch=5] Partition topic_name-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,938] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,938] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,938] INFO [Controller id=1 epoch=5] Partition btc_prices-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,939] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,939] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,939] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,939] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,940] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,940] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,940] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,941] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,941] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,941] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,942] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,942] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,942] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,942] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,943] INFO [Controller id=1 epoch=5] Partition eth_prices-0 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,943] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,943] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,943] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,946] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-08-01 16:29:36,948] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-08-01 16:29:36,948] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 28 partitions (state.change.logger)
[2023-08-01 16:29:36,997] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 26 partitions (state.change.logger)
[2023-08-01 16:29:37,048] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-3 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,125] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,126] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,127] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition topic_name-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition topic_name-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,127] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,128] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition btc_prices-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition btc_prices-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,129] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,129] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,130] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,130] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,131] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,136] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,136] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,137] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,138] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,138] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,139] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,139] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,140] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,147] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,147] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,148] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,149] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition eth_prices-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition eth_prices-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,149] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,150] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,150] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,152] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,152] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,152] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:281)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1528)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1435)
	at kafka.controller.KafkaController.process(KafkaController.scala:2614)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:127)
[2023-08-01 16:29:37,154] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-25 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,154] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,154] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-37 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,154] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-13 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,154] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,155] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,155] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-7 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,155] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,155] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,155] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,155] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,155] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-49 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,155] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,156] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-31 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,156] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,156] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,156] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,156] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-19 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,156] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,159] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-43 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,159] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,159] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,159] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,159] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,160] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-08-01 16:29:37,160] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 25 become-leader and 0 become-follower partitions (state.change.logger)
[2023-08-01 16:29:37,160] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 25 partitions (state.change.logger)
[2023-08-01 16:29:37,197] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-37 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,208] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-7 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,228] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-41 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,250] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-29 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,266] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-33 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,280] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-19 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,290] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-23 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,305] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-11 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,315] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-45 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,327] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-15 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,339] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-49 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,349] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-35 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,364] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-5 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,375] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-39 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,386] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-9 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,426] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-27 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,438] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-31 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,452] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-1 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,466] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-21 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,478] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-25 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,496] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-43 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,507] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition topic_name-0 (last update controller epoch 3) but cannot become follower since the new leader 2 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,518] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-13 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,530] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-47 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,544] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-17 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,558] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 5 with correlation id 1 for 0 partitions (state.change.logger)
[2023-08-01 16:29:37,569] INFO [Broker id=1] Finished LeaderAndIsr request in 574ms correlationId 1 from controller 1 for 26 partitions (state.change.logger)
[2023-08-01 16:29:37,579] INFO [Broker id=1] Add 26 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-08-01 16:29:37,581] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 1 partitions (state.change.logger)
[2023-08-01 16:29:37,581] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition topic_name-0 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-08-01 16:29:37,583] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 5 with correlation id 3 for 0 partitions (state.change.logger)
[2023-08-01 16:29:37,583] INFO [Broker id=1] Finished LeaderAndIsr request in 2ms correlationId 3 from controller 1 for 1 partitions (state.change.logger)
[2023-08-01 16:29:37,586] INFO [Broker id=1] Add 28 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-08-01 16:29:37,589] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 for 25 partitions (state.change.logger)
[2023-08-01 16:29:37,592] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 5 as part of the become-leader transition for 25 partitions (state.change.logger)
[2023-08-01 16:29:37,598] INFO [Broker id=1] Leader __consumer_offsets-3 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,608] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,626] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,629] INFO [Broker id=1] Leader __consumer_offsets-41 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,631] INFO [Broker id=1] Leader __consumer_offsets-29 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,634] INFO [Broker id=1] Leader __consumer_offsets-33 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,636] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,639] INFO [Broker id=1] Leader __consumer_offsets-23 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,641] INFO [Broker id=1] Leader __consumer_offsets-11 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,644] INFO [Broker id=1] Leader __consumer_offsets-45 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,646] INFO [Broker id=1] Leader __consumer_offsets-15 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,649] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,651] INFO [Broker id=1] Leader __consumer_offsets-35 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,654] INFO [Broker id=1] Leader __consumer_offsets-5 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,656] INFO [Broker id=1] Leader __consumer_offsets-39 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,659] INFO [Broker id=1] Leader __consumer_offsets-9 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,661] INFO [Broker id=1] Leader __consumer_offsets-27 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,664] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,667] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,670] INFO [Broker id=1] Leader __consumer_offsets-21 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,672] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,675] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,678] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,680] INFO [Broker id=1] Leader __consumer_offsets-47 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,683] INFO [Broker id=1] Leader __consumer_offsets-17 with topic id Some(FplHN1mjSZ6Z-dvS0ZfdKw) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas [] . Previous leader epoch was -1. (state.change.logger)
[2023-08-01 16:29:37,705] INFO [Broker id=1] Finished LeaderAndIsr request in 117ms correlationId 5 from controller 1 for 25 partitions (state.change.logger)
[2023-08-01 16:29:37,709] INFO [Broker id=1] Add 25 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
